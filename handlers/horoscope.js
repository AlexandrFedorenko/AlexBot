const axios = require('axios');
const { translate } = require('@vitalets/google-translate-api');
require('dotenv').config();

/**
 * Get horoscope by zodiac sign and day with translation into Russian.
 * @param {Context} ctx - Telegraf Context.
 * @param {string} sign - Zodiac sign.
 * @param {string} day - Day (today, tomorrow, etc.).
 * @param {string} errorMessage - Error message.
 */
async function handleHoroscope(ctx, sign, day = 'today', errorMessage) {
  try {
    const options = {
      method: 'GET',
      url: process.env.HOROSCOPE_API_URL, 
      params: {
        sign,
        day    // 'today' / 'tomorrow'
      },
      headers: {
        'x-rapidapi-key': process.env.HOROSCOPE_API_KEY,
        'x-rapidapi-host': process.env.HOROSCOPE_API_HOST
      }
    };

    const response = await axios.request(options);
    //console.log('üî• –û—Ç–≤–µ—Ç –æ—Ç –Ω–æ–≤–æ–≥–æ API:', response.data);

    // IMPORTANT! Look at the structure:
    // {
    //   data: {
    //     date: 'Dec 24, 2024',
    //     horoscope_data: 'Try not to be too competitive today, Cancer...'
    //   },
    //   status: 200,
    //   success: true
    // }

    const apiData = response.data;
    const horoscopeData = apiData?.data?.horoscope_data;
    if (!horoscopeData) {
      console.warn(`‚ö†Ô∏è API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–Ω–∞–∫–∞: ${sign}`);
      return ctx.reply('‚ùå –ì–æ—Ä–æ—Å–∫–æ–ø –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }

    let originalText = `‚ú® **–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è ${sign.toUpperCase()} –Ω–∞ ${day}:**\n`;
    originalText += `üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: ${horoscopeData}\n`;

    const { text: translatedText } = await translate(originalText, { to: 'ru' });
    ctx.reply(translatedText);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞:', error.response?.data || error.message);

    if (
      error.response 
      && error.response.data 
      && typeof error.response.data.message === 'string'
      && error.response.data.message.includes('You have exceeded the MONTHLY quota')
    ) {
      ctx.reply(
        '–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å—á–µ—Ä–ø–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞ –∏–ª–∏ –≤ –Ω–∞—á–∞–ª–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞.'
      );
    } else {
      ctx.reply(
        errorMessage || '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
      );
    }
  }
}

module.exports = { handleHoroscope };
